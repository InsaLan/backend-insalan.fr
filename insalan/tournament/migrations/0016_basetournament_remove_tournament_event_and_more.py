# Generated by Django 4.1.12 on 2025-10-16 18:07

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import insalan.components.image_field
import insalan.tournament.models.tournament


class Migration(migrations.Migration):

    dependencies = [
        ('payment', '0006_discount_transaction_discounts'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('tournament', '0015_alter_tournament_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nom du tournoi')),
                ('rules', models.TextField(blank=True, default='', max_length=50000, verbose_name='Règlement du tournoi')),
                ('logo', insalan.components.image_field.ImageField(blank=True, null=True, upload_to='tournament-icons', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'svg', 'webp', 'avif'])], verbose_name='Logo')),
                ('maxTeam', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Nombre maximal d'équipe")),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='Description du tournoi')),
                ('description_bottom', models.CharField(blank=True, default='', max_length=300, verbose_name='Description du tournoi en bas de page')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.game', verbose_name='Jeu')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateTournament',
            fields=[
                ('basetournament_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.basetournament')),
                ('password', models.CharField(blank=True, max_length=512, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Mot de passe')),
                ('running', models.BooleanField(default=True, verbose_name='En cours')),
                ('start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Début du tournoi')),
                ('rewards', models.TextField(blank=True, default='', max_length=50000, verbose_name='Récompenses du tournois')),
            ],
            options={
                'verbose_name': 'Tournoi privé',
                'verbose_name_plural': 'Tournois privés',
            },
            bases=('tournament.basetournament',),
        ),
        migrations.CreateModel(
            name='EventTournament',
            fields=[
                ('basetournament_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.basetournament')),
                ('is_announced', models.BooleanField(default=False, verbose_name='Annoncé')),
                ('registration_open', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Ouverture des inscriptions')),
                ('registration_close', models.DateTimeField(blank=True, default=insalan.tournament.models.tournament.in_thirty_days, verbose_name='Fermeture des inscriptions')),
                ('player_price_online', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix joueur en ligne')),
                ('player_price_onsite', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix joueur sur place')),
                ('manager_price_online', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix manager en ligne')),
                ('manager_price_onsite', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix manager sur place')),
                ('substitute_price_online', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix Remplaçant en ligne')),
                ('substitute_price_onsite', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix Remplaçant sur place')),
                ('cashprizes', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, default=0.0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)]), blank=True, default=list, size=None, verbose_name='Cashprizes')),
                ('planning_file', models.FileField(blank=True, null=True, upload_to='tournament-planning', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['ics'])], verbose_name='Fichier ICS du planning')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.event', verbose_name='Évènement')),
                ('manager_online_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_product_reference', to='payment.product', verbose_name='Produit manager')),
                ('player_online_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_product_reference', to='payment.product', verbose_name='Produit joueur')),
                ('substitute_online_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substitute_product_reference', to='payment.product', verbose_name='Produit substitute')),
            ],
            options={
                'verbose_name': 'Tournoi',
                'verbose_name_plural': 'Tournois',
            },
            bases=('tournament.basetournament',),
        ),
        migrations.AddIndex(
            model_name='basetournament',
            index=models.Index(fields=['game'], name='tournament__game_id_1048a4_idx'),
        ),
    ]
