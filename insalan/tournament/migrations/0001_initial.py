# Generated by Django 4.1.12 on 2023-10-29 16:19

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import insalan.tournament.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tickets', '0001_initial'),
        ('payment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(4)], verbose_name="Nom de l'évènement")),
                ('description', models.CharField(blank=True, default='', max_length=128, verbose_name="Description de l'évènement")),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2003)], verbose_name='Année')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mois')),
                ('ongoing', models.BooleanField(default=False, verbose_name='En cours')),
                ('logo', models.FileField(blank=True, null=True, upload_to='event-icons', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'svg'])], verbose_name='Logo')),
            ],
            options={
                'verbose_name': 'Évènement',
                'verbose_name_plural': 'Évènements',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nom du jeux')),
                ('short_name', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nom raccourci du jeu')),
            ],
            options={
                'verbose_name': 'Jeu',
                'verbose_name_plural': 'Jeux',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(blank=True, choices=[('NOTPAID', 'Pas payé'), ('PAID', 'Payé'), ('LATER', 'Payera sur place')], default='NOTPAID', max_length=10, verbose_name='Statut du paiement')),
            ],
            options={
                'verbose_name': "Inscription d'un⋅e manager",
                'verbose_name_plural': 'Inscriptions de managers',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nom du tournoi')),
                ('is_announced', models.BooleanField(default=False, verbose_name='Annoncé')),
                ('rules', models.TextField(blank=True, default='', max_length=50000, verbose_name='Règlement du tournoi')),
                ('registration_open', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Ouverture des inscriptions')),
                ('registration_close', models.DateTimeField(blank=True, default=insalan.tournament.models.in_thirty_days, verbose_name='Fermeture des inscriptions')),
                ('logo', models.FileField(blank=True, null=True, upload_to='tournament-icons', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'svg'])], verbose_name='Logo')),
                ('player_price_online', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix joueur en ligne')),
                ('player_price_onsite', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix joueur sur place')),
                ('manager_price_online', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix manager en ligne')),
                ('manager_price_onsite', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='prix manager sur place')),
                ('cashprizes', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, default=0.0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)]), blank=True, default=list, size=None, verbose_name='Cashprizes')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.event', verbose_name='Évènement')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.game', verbose_name='Jeu')),
                ('manager_online_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_product_reference', to='payment.product', verbose_name='Produit manager')),
                ('player_online_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_product_reference', to='payment.product', verbose_name='Produit joueur')),
            ],
            options={
                'verbose_name': 'Tournoi',
                'verbose_name_plural': 'Tournois',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=42, validators=[django.core.validators.MinLengthValidator(3)], verbose_name="Nom d'équipe")),
                ('validated', models.BooleanField(blank=True, default=False, verbose_name='Équipe validée')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament', verbose_name='Tournoi')),
            ],
            options={
                'verbose_name': 'Équipe',
                'verbose_name_plural': 'Équipes',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(blank=True, choices=[('NOTPAID', 'Pas payé'), ('PAID', 'Payé'), ('LATER', 'Payera sur place')], default='NOTPAID', max_length=10, verbose_name='Statut du paiement')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.team', verbose_name='Équipe')),
                ('ticket', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tickets.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': "Inscription d'un⋅e joueur⋅euse",
                'verbose_name_plural': 'Inscription de joueur⋅euses',
            },
        ),
    ]
